{"ast":null,"code":"var _jsxFileName = \"/home/amar/Projects/amazona/frontend/src/screens/RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { register } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport SigninScreen from './SigninScreen';\nexport default function RegisterScreen(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\n  const testing = '/signin';\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    userInfo,\n    loading,\n    error\n  } = userRegister;\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Password and confirm password are not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(testing);\n    }\n  }, [props.history, testing, userInfo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Create Account\")), loading && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }), error && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 27\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    placeholder: \"Enter name\",\n    required: true,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    placeholder: \"Enter email\",\n    required: true,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    placeholder: \"Enter password\",\n    required: true,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    placeholder: \"Enter confirm password\",\n    required: true,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Already have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    to: `/signin?redirect=${redirect}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Sign-In\")))));\n}\n\n_s(RegisterScreen, \"RJqeP4RwuNYzk+hH1l9Xu/GUu0w=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["/home/amar/Projects/amazona/frontend/src/screens/RegisterScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","Redirect","register","LoadingBox","MessageBox","SigninScreen","RegisterScreen","props","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","redirect","location","search","split","testing","userRegister","state","userInfo","loading","error","dispatch","submitHandler","e","preventDefault","alert","history","push","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { register } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport SigninScreen from './SigninScreen';\n\nexport default function RegisterScreen(props) {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const redirect = props.location.search\n        ? props.location.search.split('=')[1]\n        : '/';\n    const testing = '/signin';\n\n    const userRegister = useSelector((state) => state.userRegister);\n    const { userInfo, loading, error } = userRegister;\n\n    const dispatch = useDispatch();\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            alert('Password and confirm password are not match');\n        } else {\n            dispatch(register(name, email, password));\n        }\n    };\n    useEffect(() => {\n        if (userInfo) {\n\n            props.history.push(testing);\n\n        }\n    }, [props.history, testing, userInfo]\n\n    );\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Create Account</h1>\n                </div>\n                {loading && <LoadingBox></LoadingBox>}\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        placeholder=\"Enter name\"\n                        required\n                        onChange={(e) => setName(e.target.value)}\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email address</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        placeholder=\"Enter email\"\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Enter password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"confirmPassword\"\n                        placeholder=\"Enter confirm password\"\n                        required\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></input>\n                </div>\n                <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">\n                        Register\n          </button>\n                </div>\n                <div>\n                    <label />\n                    <div>\n                        Already have an account?{' '}\n                        <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}