{"ast":null,"code":"import axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL } from \"../constants/userConstants\";\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); // dispatch({type:USER_SIGNIN_SUCCESS, payload:data});\n    //  localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n    console.log(user);\n    console.log(user.email); //    console.log(data)\n    //    console.log(data.name)\n    //     console.log(data.email)\n    //     console.log(data.email)\n    //    var test = localStorage.getItem(('userInfo'))\n    //    console.log(test)\n    //    console.log(test.email)\n    //  console.log(localStorage.getItem('userInfo'))\n    // console.log(localStorage.getItem('userInfo').email)\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\"); // localStorage.removeItem('userSignInfo');\n\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"shippingAddress\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorizatin: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/amar/Projects/amazona/frontend/src/actions/userActions.js"],"names":["axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_DETAILS_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_SUCCESS","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","register","name","email","password","dispatch","type","payload","data","post","error","response","message","signin","localStorage","setItem","JSON","stringify","user","parse","getItem","console","log","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorizatin","token","updateUserProfile","put","Authorization"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_SUCCESS,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n} from \"../constants/userConstants\";\n\nexport const register = (name, email, password) => async (dispatch) => {\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password,\n    });\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    // dispatch({type:USER_SIGNIN_SUCCESS, payload:data});\n    //  localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await axios.post(\"/api/users/signin\", { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n    console.log(user);\n    console.log(user.email);\n    //    console.log(data)\n    //    console.log(data.name)\n    //     console.log(data.email)\n    //     console.log(data.email)\n    //    var test = localStorage.getItem(('userInfo'))\n    //    console.log(test)\n    //    console.log(test.email)\n    //  console.log(localStorage.getItem('userInfo'))\n    // console.log(localStorage.getItem('userInfo').email)\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  // localStorage.removeItem('userSignInfo');\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"shippingAddress\");\n\n  dispatch({ type: USER_SIGNOUT });\n};\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await axios.get(`/api/users/${userId}`, {\n      headers: { Authorizatin: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await axios.put(`/api/users/profile`, user, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}